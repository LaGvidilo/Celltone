Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> partassign
Rule 4     statement -> propassign
Rule 5     statement -> rule
Rule 6     statement -> confassign
Rule 7     empty -> <empty>
Rule 8     partassign -> ID ASSIGN notelist
Rule 9     notelist -> LSQUARE notes RSQUARE
Rule 10    notes -> note COMMA notes
Rule 11    notes -> note
Rule 12    notes -> empty
Rule 13    note -> NUMBER
Rule 14    note -> PAUSE
Rule 15    property -> ID DOT ID
Rule 16    propassign -> property ASSIGN NUMBER
Rule 17    rule -> lhs BECOMES rhs
Rule 18    lhs -> LCURLY clauses RCURLY
Rule 19    clauses -> clause COMMA clauses
Rule 20    clauses -> clause
Rule 21    clauses -> empty
Rule 22    clause -> indexed comparator subject
Rule 23    indexed -> ID LSQUARE NUMBER RSQUARE
Rule 24    comparator -> EQ
Rule 25    comparator -> NEQ
Rule 26    comparator -> LT
Rule 27    comparator -> LTE
Rule 28    comparator -> GT
Rule 29    comparator -> GTE
Rule 30    subject -> note
Rule 31    subject -> indexed
Rule 32    rhs -> LCURLY modifiers RCURLY
Rule 33    modifiers -> modifier COMMA modifiers
Rule 34    modifiers -> modifier
Rule 35    modifiers -> empty
Rule 36    modifier -> indexed ASSIGN subject
Rule 37    modifier -> indexed
Rule 38    confassign -> OPTION ASSIGN NUMBER

Terminals, with rules where they appear

ASSIGN               : 8 16 36 38
BECOMES              : 17
COMMA                : 10 19 33
DOT                  : 15
EQ                   : 24
GT                   : 28
GTE                  : 29
ID                   : 8 15 15 23
LCURLY               : 18 32
LSQUARE              : 9 23
LT                   : 26
LTE                  : 27
NEQ                  : 25
NUMBER               : 13 16 23 38
OPTION               : 38
PAUSE                : 14
RCURLY               : 18 32
RSQUARE              : 9 23
error                : 

Nonterminals, with rules where they appear

clause               : 19 20
clauses              : 18 19
comparator           : 22
confassign           : 6
empty                : 12 21 35
indexed              : 22 31 36 37
lhs                  : 17
modifier             : 33 34
modifiers            : 32 33
note                 : 10 11 30
notelist             : 8
notes                : 9 10
partassign           : 3
program              : 1 0
propassign           : 4
property             : 16
rhs                  : 17
rule                 : 5
statement            : 1 2
subject              : 22 36

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . partassign
    (4) statement -> . propassign
    (5) statement -> . rule
    (6) statement -> . confassign
    (8) partassign -> . ID ASSIGN notelist
    (16) propassign -> . property ASSIGN NUMBER
    (17) rule -> . lhs BECOMES rhs
    (38) confassign -> . OPTION ASSIGN NUMBER
    (15) property -> . ID DOT ID
    (18) lhs -> . LCURLY clauses RCURLY

    ID              shift and go to state 10
    OPTION          shift and go to state 2
    LCURLY          shift and go to state 4

    propassign                     shift and go to state 1
    rule                           shift and go to state 3
    program                        shift and go to state 5
    partassign                     shift and go to state 6
    statement                      shift and go to state 7
    lhs                            shift and go to state 8
    property                       shift and go to state 9
    confassign                     shift and go to state 11

state 1

    (4) statement -> propassign .

    ID              reduce using rule 4 (statement -> propassign .)
    OPTION          reduce using rule 4 (statement -> propassign .)
    LCURLY          reduce using rule 4 (statement -> propassign .)
    $end            reduce using rule 4 (statement -> propassign .)


state 2

    (38) confassign -> OPTION . ASSIGN NUMBER

    ASSIGN          shift and go to state 12


state 3

    (5) statement -> rule .

    ID              reduce using rule 5 (statement -> rule .)
    OPTION          reduce using rule 5 (statement -> rule .)
    LCURLY          reduce using rule 5 (statement -> rule .)
    $end            reduce using rule 5 (statement -> rule .)


state 4

    (18) lhs -> LCURLY . clauses RCURLY
    (19) clauses -> . clause COMMA clauses
    (20) clauses -> . clause
    (21) clauses -> . empty
    (22) clause -> . indexed comparator subject
    (7) empty -> .
    (23) indexed -> . ID LSQUARE NUMBER RSQUARE

    RCURLY          reduce using rule 7 (empty -> .)
    ID              shift and go to state 16

    clause                         shift and go to state 13
    indexed                        shift and go to state 14
    clauses                        shift and go to state 15
    empty                          shift and go to state 17

state 5

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . partassign
    (4) statement -> . propassign
    (5) statement -> . rule
    (6) statement -> . confassign
    (8) partassign -> . ID ASSIGN notelist
    (16) propassign -> . property ASSIGN NUMBER
    (17) rule -> . lhs BECOMES rhs
    (38) confassign -> . OPTION ASSIGN NUMBER
    (15) property -> . ID DOT ID
    (18) lhs -> . LCURLY clauses RCURLY

    ID              shift and go to state 10
    OPTION          shift and go to state 2
    LCURLY          shift and go to state 4

    propassign                     shift and go to state 1
    rule                           shift and go to state 3
    partassign                     shift and go to state 6
    statement                      shift and go to state 18
    lhs                            shift and go to state 8
    property                       shift and go to state 9
    confassign                     shift and go to state 11

state 6

    (3) statement -> partassign .

    ID              reduce using rule 3 (statement -> partassign .)
    OPTION          reduce using rule 3 (statement -> partassign .)
    LCURLY          reduce using rule 3 (statement -> partassign .)
    $end            reduce using rule 3 (statement -> partassign .)


state 7

    (2) program -> statement .

    ID              reduce using rule 2 (program -> statement .)
    OPTION          reduce using rule 2 (program -> statement .)
    LCURLY          reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 8

    (17) rule -> lhs . BECOMES rhs

    BECOMES         shift and go to state 19


state 9

    (16) propassign -> property . ASSIGN NUMBER

    ASSIGN          shift and go to state 20


state 10

    (8) partassign -> ID . ASSIGN notelist
    (15) property -> ID . DOT ID

    ASSIGN          shift and go to state 22
    DOT             shift and go to state 21


state 11

    (6) statement -> confassign .

    ID              reduce using rule 6 (statement -> confassign .)
    OPTION          reduce using rule 6 (statement -> confassign .)
    LCURLY          reduce using rule 6 (statement -> confassign .)
    $end            reduce using rule 6 (statement -> confassign .)


state 12

    (38) confassign -> OPTION ASSIGN . NUMBER

    NUMBER          shift and go to state 23


state 13

    (19) clauses -> clause . COMMA clauses
    (20) clauses -> clause .

    COMMA           shift and go to state 24
    RCURLY          reduce using rule 20 (clauses -> clause .)


state 14

    (22) clause -> indexed . comparator subject
    (24) comparator -> . EQ
    (25) comparator -> . NEQ
    (26) comparator -> . LT
    (27) comparator -> . LTE
    (28) comparator -> . GT
    (29) comparator -> . GTE

    EQ              shift and go to state 30
    NEQ             shift and go to state 31
    LT              shift and go to state 28
    LTE             shift and go to state 29
    GT              shift and go to state 25
    GTE             shift and go to state 26

    comparator                     shift and go to state 27

state 15

    (18) lhs -> LCURLY clauses . RCURLY

    RCURLY          shift and go to state 32


state 16

    (23) indexed -> ID . LSQUARE NUMBER RSQUARE

    LSQUARE         shift and go to state 33


state 17

    (21) clauses -> empty .

    RCURLY          reduce using rule 21 (clauses -> empty .)


state 18

    (1) program -> program statement .

    ID              reduce using rule 1 (program -> program statement .)
    OPTION          reduce using rule 1 (program -> program statement .)
    LCURLY          reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 19

    (17) rule -> lhs BECOMES . rhs
    (32) rhs -> . LCURLY modifiers RCURLY

    LCURLY          shift and go to state 35

    rhs                            shift and go to state 34

state 20

    (16) propassign -> property ASSIGN . NUMBER

    NUMBER          shift and go to state 36


state 21

    (15) property -> ID DOT . ID

    ID              shift and go to state 37


state 22

    (8) partassign -> ID ASSIGN . notelist
    (9) notelist -> . LSQUARE notes RSQUARE

    LSQUARE         shift and go to state 39

    notelist                       shift and go to state 38

state 23

    (38) confassign -> OPTION ASSIGN NUMBER .

    ID              reduce using rule 38 (confassign -> OPTION ASSIGN NUMBER .)
    OPTION          reduce using rule 38 (confassign -> OPTION ASSIGN NUMBER .)
    LCURLY          reduce using rule 38 (confassign -> OPTION ASSIGN NUMBER .)
    $end            reduce using rule 38 (confassign -> OPTION ASSIGN NUMBER .)


state 24

    (19) clauses -> clause COMMA . clauses
    (19) clauses -> . clause COMMA clauses
    (20) clauses -> . clause
    (21) clauses -> . empty
    (22) clause -> . indexed comparator subject
    (7) empty -> .
    (23) indexed -> . ID LSQUARE NUMBER RSQUARE

    RCURLY          reduce using rule 7 (empty -> .)
    ID              shift and go to state 16

    clause                         shift and go to state 13
    indexed                        shift and go to state 14
    clauses                        shift and go to state 40
    empty                          shift and go to state 17

state 25

    (28) comparator -> GT .

    NUMBER          reduce using rule 28 (comparator -> GT .)
    PAUSE           reduce using rule 28 (comparator -> GT .)
    ID              reduce using rule 28 (comparator -> GT .)


state 26

    (29) comparator -> GTE .

    NUMBER          reduce using rule 29 (comparator -> GTE .)
    PAUSE           reduce using rule 29 (comparator -> GTE .)
    ID              reduce using rule 29 (comparator -> GTE .)


state 27

    (22) clause -> indexed comparator . subject
    (30) subject -> . note
    (31) subject -> . indexed
    (13) note -> . NUMBER
    (14) note -> . PAUSE
    (23) indexed -> . ID LSQUARE NUMBER RSQUARE

    NUMBER          shift and go to state 42
    PAUSE           shift and go to state 41
    ID              shift and go to state 16

    indexed                        shift and go to state 44
    note                           shift and go to state 43
    subject                        shift and go to state 45

state 28

    (26) comparator -> LT .

    NUMBER          reduce using rule 26 (comparator -> LT .)
    PAUSE           reduce using rule 26 (comparator -> LT .)
    ID              reduce using rule 26 (comparator -> LT .)


state 29

    (27) comparator -> LTE .

    NUMBER          reduce using rule 27 (comparator -> LTE .)
    PAUSE           reduce using rule 27 (comparator -> LTE .)
    ID              reduce using rule 27 (comparator -> LTE .)


state 30

    (24) comparator -> EQ .

    NUMBER          reduce using rule 24 (comparator -> EQ .)
    PAUSE           reduce using rule 24 (comparator -> EQ .)
    ID              reduce using rule 24 (comparator -> EQ .)


state 31

    (25) comparator -> NEQ .

    NUMBER          reduce using rule 25 (comparator -> NEQ .)
    PAUSE           reduce using rule 25 (comparator -> NEQ .)
    ID              reduce using rule 25 (comparator -> NEQ .)


state 32

    (18) lhs -> LCURLY clauses RCURLY .

    BECOMES         reduce using rule 18 (lhs -> LCURLY clauses RCURLY .)


state 33

    (23) indexed -> ID LSQUARE . NUMBER RSQUARE

    NUMBER          shift and go to state 46


state 34

    (17) rule -> lhs BECOMES rhs .

    ID              reduce using rule 17 (rule -> lhs BECOMES rhs .)
    OPTION          reduce using rule 17 (rule -> lhs BECOMES rhs .)
    LCURLY          reduce using rule 17 (rule -> lhs BECOMES rhs .)
    $end            reduce using rule 17 (rule -> lhs BECOMES rhs .)


state 35

    (32) rhs -> LCURLY . modifiers RCURLY
    (33) modifiers -> . modifier COMMA modifiers
    (34) modifiers -> . modifier
    (35) modifiers -> . empty
    (36) modifier -> . indexed ASSIGN subject
    (37) modifier -> . indexed
    (7) empty -> .
    (23) indexed -> . ID LSQUARE NUMBER RSQUARE

    RCURLY          reduce using rule 7 (empty -> .)
    ID              shift and go to state 16

    indexed                        shift and go to state 48
    modifier                       shift and go to state 49
    modifiers                      shift and go to state 47
    empty                          shift and go to state 50

state 36

    (16) propassign -> property ASSIGN NUMBER .

    ID              reduce using rule 16 (propassign -> property ASSIGN NUMBER .)
    OPTION          reduce using rule 16 (propassign -> property ASSIGN NUMBER .)
    LCURLY          reduce using rule 16 (propassign -> property ASSIGN NUMBER .)
    $end            reduce using rule 16 (propassign -> property ASSIGN NUMBER .)


state 37

    (15) property -> ID DOT ID .

    ASSIGN          reduce using rule 15 (property -> ID DOT ID .)


state 38

    (8) partassign -> ID ASSIGN notelist .

    ID              reduce using rule 8 (partassign -> ID ASSIGN notelist .)
    OPTION          reduce using rule 8 (partassign -> ID ASSIGN notelist .)
    LCURLY          reduce using rule 8 (partassign -> ID ASSIGN notelist .)
    $end            reduce using rule 8 (partassign -> ID ASSIGN notelist .)


state 39

    (9) notelist -> LSQUARE . notes RSQUARE
    (10) notes -> . note COMMA notes
    (11) notes -> . note
    (12) notes -> . empty
    (13) note -> . NUMBER
    (14) note -> . PAUSE
    (7) empty -> .

    NUMBER          shift and go to state 42
    PAUSE           shift and go to state 41
    RSQUARE         reduce using rule 7 (empty -> .)

    note                           shift and go to state 52
    notes                          shift and go to state 51
    empty                          shift and go to state 53

state 40

    (19) clauses -> clause COMMA clauses .

    RCURLY          reduce using rule 19 (clauses -> clause COMMA clauses .)


state 41

    (14) note -> PAUSE .

    COMMA           reduce using rule 14 (note -> PAUSE .)
    RSQUARE         reduce using rule 14 (note -> PAUSE .)
    RCURLY          reduce using rule 14 (note -> PAUSE .)


state 42

    (13) note -> NUMBER .

    COMMA           reduce using rule 13 (note -> NUMBER .)
    RSQUARE         reduce using rule 13 (note -> NUMBER .)
    RCURLY          reduce using rule 13 (note -> NUMBER .)


state 43

    (30) subject -> note .

    COMMA           reduce using rule 30 (subject -> note .)
    RCURLY          reduce using rule 30 (subject -> note .)


state 44

    (31) subject -> indexed .

    COMMA           reduce using rule 31 (subject -> indexed .)
    RCURLY          reduce using rule 31 (subject -> indexed .)


state 45

    (22) clause -> indexed comparator subject .

    COMMA           reduce using rule 22 (clause -> indexed comparator subject .)
    RCURLY          reduce using rule 22 (clause -> indexed comparator subject .)


state 46

    (23) indexed -> ID LSQUARE NUMBER . RSQUARE

    RSQUARE         shift and go to state 54


state 47

    (32) rhs -> LCURLY modifiers . RCURLY

    RCURLY          shift and go to state 55


state 48

    (36) modifier -> indexed . ASSIGN subject
    (37) modifier -> indexed .

    ASSIGN          shift and go to state 56
    COMMA           reduce using rule 37 (modifier -> indexed .)
    RCURLY          reduce using rule 37 (modifier -> indexed .)


state 49

    (33) modifiers -> modifier . COMMA modifiers
    (34) modifiers -> modifier .

    COMMA           shift and go to state 57
    RCURLY          reduce using rule 34 (modifiers -> modifier .)


state 50

    (35) modifiers -> empty .

    RCURLY          reduce using rule 35 (modifiers -> empty .)


state 51

    (9) notelist -> LSQUARE notes . RSQUARE

    RSQUARE         shift and go to state 58


state 52

    (10) notes -> note . COMMA notes
    (11) notes -> note .

    COMMA           shift and go to state 59
    RSQUARE         reduce using rule 11 (notes -> note .)


state 53

    (12) notes -> empty .

    RSQUARE         reduce using rule 12 (notes -> empty .)


state 54

    (23) indexed -> ID LSQUARE NUMBER RSQUARE .

    EQ              reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    NEQ             reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    LT              reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    LTE             reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    GT              reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    GTE             reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    COMMA           reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    RCURLY          reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)
    ASSIGN          reduce using rule 23 (indexed -> ID LSQUARE NUMBER RSQUARE .)


state 55

    (32) rhs -> LCURLY modifiers RCURLY .

    ID              reduce using rule 32 (rhs -> LCURLY modifiers RCURLY .)
    OPTION          reduce using rule 32 (rhs -> LCURLY modifiers RCURLY .)
    LCURLY          reduce using rule 32 (rhs -> LCURLY modifiers RCURLY .)
    $end            reduce using rule 32 (rhs -> LCURLY modifiers RCURLY .)


state 56

    (36) modifier -> indexed ASSIGN . subject
    (30) subject -> . note
    (31) subject -> . indexed
    (13) note -> . NUMBER
    (14) note -> . PAUSE
    (23) indexed -> . ID LSQUARE NUMBER RSQUARE

    NUMBER          shift and go to state 42
    PAUSE           shift and go to state 41
    ID              shift and go to state 16

    indexed                        shift and go to state 44
    note                           shift and go to state 43
    subject                        shift and go to state 60

state 57

    (33) modifiers -> modifier COMMA . modifiers
    (33) modifiers -> . modifier COMMA modifiers
    (34) modifiers -> . modifier
    (35) modifiers -> . empty
    (36) modifier -> . indexed ASSIGN subject
    (37) modifier -> . indexed
    (7) empty -> .
    (23) indexed -> . ID LSQUARE NUMBER RSQUARE

    RCURLY          reduce using rule 7 (empty -> .)
    ID              shift and go to state 16

    indexed                        shift and go to state 48
    modifier                       shift and go to state 49
    empty                          shift and go to state 50
    modifiers                      shift and go to state 61

state 58

    (9) notelist -> LSQUARE notes RSQUARE .

    ID              reduce using rule 9 (notelist -> LSQUARE notes RSQUARE .)
    OPTION          reduce using rule 9 (notelist -> LSQUARE notes RSQUARE .)
    LCURLY          reduce using rule 9 (notelist -> LSQUARE notes RSQUARE .)
    $end            reduce using rule 9 (notelist -> LSQUARE notes RSQUARE .)


state 59

    (10) notes -> note COMMA . notes
    (10) notes -> . note COMMA notes
    (11) notes -> . note
    (12) notes -> . empty
    (13) note -> . NUMBER
    (14) note -> . PAUSE
    (7) empty -> .

    NUMBER          shift and go to state 42
    PAUSE           shift and go to state 41
    RSQUARE         reduce using rule 7 (empty -> .)

    note                           shift and go to state 52
    notes                          shift and go to state 62
    empty                          shift and go to state 53

state 60

    (36) modifier -> indexed ASSIGN subject .

    COMMA           reduce using rule 36 (modifier -> indexed ASSIGN subject .)
    RCURLY          reduce using rule 36 (modifier -> indexed ASSIGN subject .)


state 61

    (33) modifiers -> modifier COMMA modifiers .

    RCURLY          reduce using rule 33 (modifiers -> modifier COMMA modifiers .)


state 62

    (10) notes -> note COMMA notes .

    RSQUARE         reduce using rule 10 (notes -> note COMMA notes .)

