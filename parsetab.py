
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'pF\x98~z\x128\xa6\x8f>\x9a\xd6\x91\x17\xb4\xcb'
    
_lr_action_items = {'LSQUARE':([16,22,],[33,39,]),'RSQUARE':([39,41,42,46,51,52,53,59,62,],[-7,-14,-13,54,58,-11,-12,-7,-10,]),'GT':([14,54,],[25,-23,]),'LTE':([14,54,],[29,-23,]),'OPTION':([0,1,3,5,6,7,11,18,23,34,36,38,55,58,],[2,-4,-5,2,-3,-2,-6,-1,-38,-17,-16,-8,-32,-9,]),'RCURLY':([4,13,15,17,24,35,40,41,42,43,44,45,47,48,49,50,54,57,60,61,],[-7,-20,32,-21,-7,-7,-19,-14,-13,-30,-31,-22,55,-37,-34,-35,-23,-7,-36,-33,]),'BECOMES':([8,32,],[19,-18,]),'NUMBER':([12,20,25,26,27,28,29,30,31,33,39,56,59,],[23,36,-28,-29,42,-26,-27,-24,-25,46,42,42,42,]),'ID':([0,1,3,4,5,6,7,11,18,21,23,24,25,26,27,28,29,30,31,34,35,36,38,55,56,57,58,],[10,-4,-5,16,10,-3,-2,-6,-1,37,-38,16,-28,-29,16,-26,-27,-24,-25,-17,16,-16,-8,-32,16,16,-9,]),'LCURLY':([0,1,3,5,6,7,11,18,19,23,34,36,38,55,58,],[4,-4,-5,4,-3,-2,-6,-1,35,-38,-17,-16,-8,-32,-9,]),'LT':([14,54,],[28,-23,]),'PAUSE':([25,26,27,28,29,30,31,39,56,59,],[-28,-29,41,-26,-27,-24,-25,41,41,41,]),'COMMA':([13,41,42,43,44,45,48,49,52,54,60,],[24,-14,-13,-30,-31,-22,-37,57,59,-23,-36,]),'GTE':([14,54,],[26,-23,]),'NEQ':([14,54,],[31,-23,]),'EQ':([14,54,],[30,-23,]),'ASSIGN':([2,9,10,37,48,54,],[12,20,22,-15,56,-23,]),'DOT':([10,],[21,]),'$end':([1,3,5,6,7,11,18,23,34,36,38,55,58,],[-4,-5,0,-3,-2,-6,-1,-38,-17,-16,-8,-32,-9,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'propassign':([0,5,],[1,1,]),'notelist':([22,],[38,]),'comparator':([14,],[27,]),'clause':([4,24,],[13,13,]),'rhs':([19,],[34,]),'subject':([27,56,],[45,60,]),'rule':([0,5,],[3,3,]),'note':([27,39,56,59,],[43,52,43,52,]),'modifier':([35,57,],[49,49,]),'program':([0,],[5,]),'lhs':([0,5,],[8,8,]),'partassign':([0,5,],[6,6,]),'statement':([0,5,],[7,18,]),'modifiers':([35,57,],[47,61,]),'indexed':([4,24,27,35,56,57,],[14,14,44,48,44,48,]),'clauses':([4,24,],[15,40,]),'property':([0,5,],[9,9,]),'notes':([39,59,],[51,62,]),'empty':([4,24,35,39,57,59,],[17,17,50,53,50,53,]),'confassign':([0,5,],[11,11,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','parser.py',101),
  ('program -> statement','program',1,'p_program','parser.py',102),
  ('statement -> partassign','statement',1,'p_statement','parser.py',105),
  ('statement -> propassign','statement',1,'p_statement','parser.py',106),
  ('statement -> rule','statement',1,'p_statement','parser.py',107),
  ('statement -> confassign','statement',1,'p_statement','parser.py',108),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',111),
  ('partassign -> ID ASSIGN notelist','partassign',3,'p_partassign','parser.py',115),
  ('notelist -> LSQUARE notes RSQUARE','notelist',3,'p_notelist','parser.py',119),
  ('notes -> note COMMA notes','notes',3,'p_notes_list','parser.py',123),
  ('notes -> note','notes',1,'p_notes_single','parser.py',127),
  ('notes -> empty','notes',1,'p_notes_empty','parser.py',131),
  ('note -> NUMBER','note',1,'p_note_number','parser.py',135),
  ('note -> PAUSE','note',1,'p_note_pause','parser.py',140),
  ('property -> ID DOT ID','property',3,'p_property','parser.py',144),
  ('propassign -> property ASSIGN NUMBER','propassign',3,'p_propassign_number','parser.py',148),
  ('rule -> lhs BECOMES rhs','rule',3,'p_rule','parser.py',155),
  ('lhs -> LCURLY clauses RCURLY','lhs',3,'p_lhs','parser.py',159),
  ('clauses -> clause COMMA clauses','clauses',3,'p_clauses_list','parser.py',163),
  ('clauses -> clause','clauses',1,'p_clauses_single','parser.py',167),
  ('clauses -> empty','clauses',1,'p_clauses_empty','parser.py',171),
  ('clause -> indexed comparator subject','clause',3,'p_clause','parser.py',175),
  ('indexed -> ID LSQUARE NUMBER RSQUARE','indexed',4,'p_indexed','parser.py',179),
  ('comparator -> EQ','comparator',1,'p_comparator','parser.py',183),
  ('comparator -> NEQ','comparator',1,'p_comparator','parser.py',184),
  ('comparator -> LT','comparator',1,'p_comparator','parser.py',185),
  ('comparator -> LTE','comparator',1,'p_comparator','parser.py',186),
  ('comparator -> GT','comparator',1,'p_comparator','parser.py',187),
  ('comparator -> GTE','comparator',1,'p_comparator','parser.py',188),
  ('subject -> note','subject',1,'p_subject','parser.py',192),
  ('subject -> indexed','subject',1,'p_subject','parser.py',193),
  ('rhs -> LCURLY modifiers RCURLY','rhs',3,'p_rhs','parser.py',197),
  ('modifiers -> modifier COMMA modifiers','modifiers',3,'p_modifiers_list','parser.py',201),
  ('modifiers -> modifier','modifiers',1,'p_modifiers_single','parser.py',205),
  ('modifiers -> empty','modifiers',1,'p_modifiers_empty','parser.py',209),
  ('modifier -> indexed ASSIGN subject','modifier',3,'p_modifier_assign','parser.py',213),
  ('modifier -> indexed','modifier',1,'p_modifier_touch','parser.py',217),
  ('confassign -> OPTION ASSIGN NUMBER','confassign',3,'p_confassign_number','parser.py',221),
]
